<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project
	xmlns:cs="antlib:com.puppycrawl.tools.checkstyle"
	xmlns:jacoco="antlib:org.jacoco.ant"
	basedir="."
	default="reports"
	name="HW15-0036441537">
	
	
	<description>
		Build file for 15th homework.
	</description>
	<property name="src" location="src" />
	<property name="src.java" location="${src}/main/java" />
	<property name="src.test" location="${src}/test/java" />
	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />
	<property name="build.test" location="${build}/test" />
	<property name="dist" location="dist" />
	<property name="dist.lib" location="${dist}/lib" />
	<property name="lib" location="weblib" />
	<property name="web" location="web" />
	<property name="web.lib" location="${web}/aplikacija5/WEB-INF/lib" />
	<property name="web.xml" location="${web}/aplikacija5/WEB-INF/web.xml" />
	<property file="config.properties" />
	
	<taskdef uri="antlib:com.puppycrawl.tools.checkstyle"
		resource="checkstyletask.properties"
		classpath="${checkstyle.home}/${checkstyle.jar}"/>
	
	<path id="pmd.lib">
		<fileset dir="${pmd.home}/lib">
			<include name="*.jar" />
		</fileset>
	</path>
	<path id="compile.path">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${web.lib}">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${build.classes}" />
	</path>
	<path id="test.path">
		<path refid="compile.path" />
		<pathelement location="${build.test}" />
		<fileset dir="${junit.home}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.lib" />
	<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="pmd.lib" />

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="${jacoco.home}/lib/jacocoant.jar" />
	</taskdef>
	<target name="init">
		<tstamp />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>

	<target name="compile" depends="init" description="Prevođenje izvornog koda">
		<mkdir dir="${build.classes}" />
		<copy todir="${build.classes}">
			<fileset dir="${src.java}" excludes="**/*.java" />
		</copy>
		<javac srcdir="${src.java}" destdir="${build.classes}" encoding="UTF-8" debug="on" debuglevel="lines,vars,source" includeAntRuntime="false" classpathref="compile.path" />
	</target>
	

	
	<target name="compile-tests" depends="compile"
		description="Compiling tests">
		
		<mkdir dir="${build.test}" />
		
		<!--Compliling from ${src.test} to &{build} -->
		<javac srcdir="${src.test}" 
		destdir="${build.test}"
		classpathref="test.path"
		encoding="UTF-8"
		debug="on"
		debuglevel="lines,vars,source"
		includeAntRuntime="false" />
	</target>

	<target name="run-tests"
		depends="compile-tests"
		description="Running tests">
		
		<mkdir dir="${dist}/test-reports/xml"/>
		<mkdir dir="${dist}/test-reports/html"/>
		<mkdir dir="${dist}/test-reports/coverage"/>
		
		<jacoco:coverage destfile="${dist}/test-reports/xml/jacoco.exec">
			<junit printsummary="yes" haltonfailure="yes"
				fork="true" forkmode="once">
				<classpath refid="test.path" />
				
				<formatter type="plain"/>
				<formatter type="xml"/>
				
				<batchtest fork="yes" todir="${dist}/test-reports/xml">
					<fileset dir="${src.test}">
						<include name="**/*Test*.java"/>
					</fileset>
				</batchtest>
			</junit>
		</jacoco:coverage>
		
		<junitreport todir="${dist}/test-reports/xml">
			<fileset dir="${dist}/test-reports/xml">
				<include name="TEST-*xml" />
			</fileset>
			<report format="frames" todir="${dist}/test-reports/html"/>
		</junitreport>
		
		<!-- Generiraj izvještaj o pokrivenosti koda testovima -->
		<jacoco:report>
			<executiondata>
				<file file="${dist}/test-reports/xml/jacoco.exec"/>
			</executiondata>
			<structure name="${ant.project.name}">
				<classfiles>
					<fileset dir="${build.classes}"/>
					<fileset dir="${build.test}"/>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${src.java}"/>
					<fileset dir="${src.test}"/>
				</sourcefiles>
			</structure>
			<html destdir="${dist}/test-reports/coverage"/>
		</jacoco:report>
		
	</target>
	
	<target name="war" depends="compile" description="Pakiranje programa u arhivu WAR">
		<war destfile="${dist}/aplikacija5.war" webxml="${web.xml}">
			<fileset dir="${web}/aplikacija5" />
			<classes dir="${build.classes}" />
		</war>
	</target>

	<target name="clean" description="Brisanje generiranog sadržaja">
		<delete dir="${build}" failonerror="false" />
		<delete dir="${dist}" failonerror="false" />
	</target>

	<target name="javadoc" depends="compile" description="Generiranje dokumentacije">
		<!-- Stvaranje direktorija za distribuciju -->
		<mkdir dir="${dist}/doc" />
		<javadoc packagenames="hr.*" sourcepath="${src.java}" defaultexcludes="yes" destdir="${dist}/doc" Encoding="UTF-8" docencoding="UTF-8" charset="UTF-8" author="true" version="true" use="true" windowtitle="Dokumentacija programa">
			<classpath>
				<fileset dir="${lib}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${web.lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<doctitle>
				<![CDATA[<h1>Prvi program</h1>]]>
			</doctitle>
		<bottom>
			<![CDATA[<i>Copyright &#169; 2013 ACME.
				All Rights Reserved.</i>]]>
			</bottom>
</javadoc>
</target>


	
	
<target name="pmd" depends="compile">
<mkdir dir="${dist}/pmd/xml" />
<mkdir dir="${dist}/pmd/html" />
<pmd shortFilenames="true" encoding="UTF-8">
	<ruleset>rulesets/java/basic.xml</ruleset>
	<ruleset>rulesets/java/braces.xml</ruleset>
	<ruleset>rulesets/java/codesize.xml</ruleset>
	<ruleset>rulesets/java/controversial.xml</ruleset>
	<ruleset>rulesets/java/design.xml</ruleset>
	<ruleset>rulesets/java/finalizers.xml</ruleset>
	<ruleset>rulesets/java/imports.xml</ruleset>
	<ruleset>rulesets/java/naming.xml</ruleset>
	<ruleset>rulesets/java/optimizations.xml</ruleset>
	<ruleset>rulesets/java/strictexception.xml</ruleset>
	<ruleset>rulesets/java/strings.xml</ruleset>
	<ruleset>rulesets/java/sunsecure.xml</ruleset>
	<ruleset>rulesets/java/typeresolution.xml</ruleset>
	<ruleset>rulesets/java/unusedcode.xml</ruleset>
	<ruleset>rulesets/java/unnecessary.xml</ruleset>
	<formatter type="xml" toFile="${dist}/pmd/xml/pmd_report.xml" />
	<fileset dir="${src.java}">
		<include name="**/*.java" />
	</fileset>
</pmd>
<cpd minimumTokenCount="10" outputFile="${dist}/pmd/xml/cpd_report.xml" format="xml" encoding="UTF-8">
	<fileset dir="src">
		<include name="**/*.java" />
	</fileset>
</cpd>
<xslt includes="cpd_report.xml" basedir="${dist}/pmd/xml" destdir="${dist}/pmd/html" extension=".html" style="${pmd.home}/etc/xslt/cpdhtml.xslt">
	<classpath>
		<fileset dir="${xalan.home}">
			<include name="*.jar" />
		</fileset>
	</classpath>
</xslt>
<xslt includes="pmd_report.xml" basedir="${dist}/pmd/xml" destdir="${dist}/pmd/html" extension=".html" style="${pmd.home}/etc/xslt/wz-pmd-report.xslt">
	<classpath>
		<fileset dir="${xalan.home}">
			<include name="*.jar" />
		</fileset>
	</classpath>
</xslt>
</target>



	
<target name="reports" depends="pmd,javadoc,run-tests">
</target>
</project>
